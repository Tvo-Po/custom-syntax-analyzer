State 44 conflicts: 14 shift/reduce
State 45 conflicts: 14 shift/reduce
State 46 conflicts: 14 shift/reduce
State 84 conflicts: 14 shift/reduce
State 85 conflicts: 14 shift/reduce
State 86 conflicts: 14 shift/reduce
State 87 conflicts: 14 shift/reduce
State 88 conflicts: 14 shift/reduce
State 90 conflicts: 14 shift/reduce
State 91 conflicts: 14 shift/reduce
State 92 conflicts: 14 shift/reduce
State 93 conflicts: 14 shift/reduce
State 94 conflicts: 14 shift/reduce
State 95 conflicts: 14 shift/reduce
State 96 conflicts: 14 shift/reduce
State 97 conflicts: 14 shift/reduce
State 109 conflicts: 14 shift/reduce, 14 reduce/reduce
State 110 conflicts: 14 shift/reduce, 14 reduce/reduce
State 111 conflicts: 1 shift/reduce
State 117 conflicts: 14 shift/reduce
State 123 conflicts: 3 shift/reduce
State 124 conflicts: 3 shift/reduce


Grammar

    0 $accept: source $end

    1 source: ε
    2       | source sourceItem

    3 sourceItem: FUNCTION funcSignature optionalFuncBody

    4 optionalFuncBody: ε
    5                 | listStatement END FUNCTION

    6 funcSignature: IDENTIFIER LPAREN listArgDef RPAREN optionalTypeRef

    7 listArgDef: ε
    8           | argDef
    9           | argDef COMMA listArgDef

   10 argDef: IDENTIFIER optionalTypeRef

   11 optionalTypeRef: ε
   12                | AS typeRef

   13 typeRef: builtin
   14        | custom
   15        | array

   16 builtin: TYPEDEF

   17 custom: IDENTIFIER

   18 array: typeRef ARRAY_COMMAS

   19 statement: var
   20          | if
   21          | while
   22          | do
   23          | break
   24          | expression

   25 listStatement: ε
   26              | statement listStatement

   27 var: DIM listIdentifier AS typeRef

   28 listIdentifier: ε
   29               | IDENTIFIER
   30               | IDENTIFIER COMMA listIdentifier

   31 if: IF expr THEN listStatement optionalElseStatement END IF

   32 optionalElseStatement: ε
   33                      | ELSE listStatement

   34 while: WHILE expr listStatement WEND

   35 do: DO listStatement LOOP WHILE expr
   36   | DO listStatement LOOP UNTIL expr

   37 break: BREAK

   38 expression: expr SEMICOLON

   39 expr: unary
   40     | binary
   41     | braces
   42     | callOrIndexer
   43     | place
   44     | literal

   45 binary: expr EQUAL expr
   46       | expr PLUS expr
   47       | expr MINUS expr
   48       | expr STAR expr
   49       | expr SLASH expr
   50       | expr PERCENT expr
   51       | expr EQUAL EQUAL expr
   52       | expr NOTEQUAL expr
   53       | expr LESSTHAN expr
   54       | expr GREATERTHAN expr
   55       | expr LESSTHANEQ expr
   56       | expr GREATERTHANEQ expr
   57       | expr AND expr
   58       | expr OR expr

   59 unary: PLUS expr
   60      | MINUS expr
   61      | NOT expr

   62 braces: LPAREN expr RPAREN

   63 callOrIndexer: expr LPAREN listExpr RPAREN

   64 listExpr: expr COMMA listExpr
   65         | expr
   66         | ε

   67 place: IDENTIFIER

   68 literal: TRUE
   69        | FALSE
   70        | STR
   71        | CHAR
   72        | HEX
   73        | BIN
   74        | DEC


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PLUS <node> (258) 46 59
    MINUS <node> (259) 47 60
    STAR <node> (260) 48
    SLASH <node> (261) 49
    PERCENT <node> (262) 50
    EQUAL <node> (263) 45 51
    NOTEQUAL <node> (264) 52
    LESSTHAN <node> (265) 53
    GREATERTHAN <node> (266) 54
    LESSTHANEQ <node> (267) 55
    GREATERTHANEQ <node> (268) 56
    AND <node> (269) 57
    OR <node> (270) 58
    NOT <node> (271) 61
    IDENTIFIER <node> (272) 6 10 17 29 30 67
    STR <node> (273) 70
    COMMA <node> (274) 9 30 64
    CHAR <node> (275) 71
    BIN <node> (276) 73
    HEX <node> (277) 72
    DEC <node> (278) 74
    TRUE <node> (279) 68
    FALSE <node> (280) 69
    IF <node> (281) 31
    THEN <node> (282) 31
    ELSE <node> (283) 33
    LOOP <node> (284) 35 36
    WHILE <node> (285) 34 35
    UNTIL <node> (286) 36
    DO <node> (287) 35 36
    BREAK <node> (288) 37
    END <node> (289) 5 31
    WEND <node> (290) 34
    SEMICOLON <node> (291) 38
    LPAREN <node> (292) 6 62 63
    RPAREN <node> (293) 6 62 63
    TYPEDEF <node> (294) 16
    DIM <node> (295) 27
    AS <node> (296) 12 27
    FUNCTION <node> (297) 3 5
    ARRAY_COMMAS <node> (298) 18


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    source <node> (45)
        on left: 1 2
        on right: 0 2
    sourceItem <node> (46)
        on left: 3
        on right: 2
    optionalFuncBody <node> (47)
        on left: 4 5
        on right: 3
    funcSignature <node> (48)
        on left: 6
        on right: 3
    listArgDef <node> (49)
        on left: 7 8 9
        on right: 6 9
    argDef <node> (50)
        on left: 10
        on right: 8 9
    optionalTypeRef <node> (51)
        on left: 11 12
        on right: 6 10
    typeRef <node> (52)
        on left: 13 14 15
        on right: 12 18 27
    builtin <node> (53)
        on left: 16
        on right: 13
    custom <node> (54)
        on left: 17
        on right: 14
    array <node> (55)
        on left: 18
        on right: 15
    statement <node> (56)
        on left: 19 20 21 22 23 24
        on right: 26
    listStatement <node> (57)
        on left: 25 26
        on right: 5 26 31 33 34 35 36
    var <node> (58)
        on left: 27
        on right: 19
    listIdentifier <node> (59)
        on left: 28 29 30
        on right: 27 30
    if <node> (60)
        on left: 31
        on right: 20
    optionalElseStatement <node> (61)
        on left: 32 33
        on right: 31
    while <node> (62)
        on left: 34
        on right: 21
    do <node> (63)
        on left: 35 36
        on right: 22
    break <node> (64)
        on left: 37
        on right: 23
    expression <node> (65)
        on left: 38
        on right: 24
    expr <node> (66)
        on left: 39 40 41 42 43 44
        on right: 31 34 35 36 38 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    binary <node> (67)
        on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58
        on right: 40
    unary <node> (68)
        on left: 59 60 61
        on right: 39
    braces <node> (69)
        on left: 62
        on right: 41
    callOrIndexer <node> (70)
        on left: 63
        on right: 42
    listExpr <node> (71)
        on left: 64 65 66
        on right: 63 64
    place <node> (72)
        on left: 67
        on right: 43
    literal <node> (73)
        on left: 68 69 70 71 72 73 74
        on right: 44


State 0

    0 $accept: • source $end

    $default  reduce using rule 1 (source)

    source  go to state 1


State 1

    0 $accept: source • $end
    2 source: source • sourceItem

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    sourceItem  go to state 4


State 2

    0 $accept: source $end •

    $default  accept


State 3

    3 sourceItem: FUNCTION • funcSignature optionalFuncBody

    IDENTIFIER  shift, and go to state 5

    funcSignature  go to state 6


State 4

    2 source: source sourceItem •

    $default  reduce using rule 2 (source)


State 5

    6 funcSignature: IDENTIFIER • LPAREN listArgDef RPAREN optionalTypeRef

    LPAREN  shift, and go to state 7


State 6

    3 sourceItem: FUNCTION funcSignature • optionalFuncBody

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    DO          shift, and go to state 21
    BREAK       shift, and go to state 22
    LPAREN      shift, and go to state 23
    DIM         shift, and go to state 24

    END       reduce using rule 25 (listStatement)
    $default  reduce using rule 4 (optionalFuncBody)

    optionalFuncBody  go to state 25
    statement         go to state 26
    listStatement     go to state 27
    var               go to state 28
    if                go to state 29
    while             go to state 30
    do                go to state 31
    break             go to state 32
    expression        go to state 33
    expr              go to state 34
    binary            go to state 35
    unary             go to state 36
    braces            go to state 37
    callOrIndexer     go to state 38
    place             go to state 39
    literal           go to state 40


State 7

    6 funcSignature: IDENTIFIER LPAREN • listArgDef RPAREN optionalTypeRef

    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 7 (listArgDef)

    listArgDef  go to state 42
    argDef      go to state 43


State 8

   59 unary: PLUS • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 44
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 9

   60 unary: MINUS • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 45
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 10

   61 unary: NOT • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 46
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 11

   67 place: IDENTIFIER •

    $default  reduce using rule 67 (place)


State 12

   70 literal: STR •

    $default  reduce using rule 70 (literal)


State 13

   71 literal: CHAR •

    $default  reduce using rule 71 (literal)


State 14

   73 literal: BIN •

    $default  reduce using rule 73 (literal)


State 15

   72 literal: HEX •

    $default  reduce using rule 72 (literal)


State 16

   74 literal: DEC •

    $default  reduce using rule 74 (literal)


State 17

   68 literal: TRUE •

    $default  reduce using rule 68 (literal)


State 18

   69 literal: FALSE •

    $default  reduce using rule 69 (literal)


State 19

   31 if: IF • expr THEN listStatement optionalElseStatement END IF

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 47
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 20

   34 while: WHILE • expr listStatement WEND

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 48
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 21

   35 do: DO • listStatement LOOP WHILE expr
   36   | DO • listStatement LOOP UNTIL expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    DO          shift, and go to state 21
    BREAK       shift, and go to state 22
    LPAREN      shift, and go to state 23
    DIM         shift, and go to state 24

    $default  reduce using rule 25 (listStatement)

    statement      go to state 26
    listStatement  go to state 49
    var            go to state 28
    if             go to state 29
    while          go to state 30
    do             go to state 31
    break          go to state 32
    expression     go to state 33
    expr           go to state 34
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 22

   37 break: BREAK •

    $default  reduce using rule 37 (break)


State 23

   62 braces: LPAREN • expr RPAREN

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 50
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 24

   27 var: DIM • listIdentifier AS typeRef

    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 28 (listIdentifier)

    listIdentifier  go to state 52


State 25

    3 sourceItem: FUNCTION funcSignature optionalFuncBody •

    $default  reduce using rule 3 (sourceItem)


State 26

   26 listStatement: statement • listStatement

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    DO          shift, and go to state 21
    BREAK       shift, and go to state 22
    LPAREN      shift, and go to state 23
    DIM         shift, and go to state 24

    $default  reduce using rule 25 (listStatement)

    statement      go to state 26
    listStatement  go to state 53
    var            go to state 28
    if             go to state 29
    while          go to state 30
    do             go to state 31
    break          go to state 32
    expression     go to state 33
    expr           go to state 34
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 27

    5 optionalFuncBody: listStatement • END FUNCTION

    END  shift, and go to state 54


State 28

   19 statement: var •

    $default  reduce using rule 19 (statement)


State 29

   20 statement: if •

    $default  reduce using rule 20 (statement)


State 30

   21 statement: while •

    $default  reduce using rule 21 (statement)


State 31

   22 statement: do •

    $default  reduce using rule 22 (statement)


State 32

   23 statement: break •

    $default  reduce using rule 23 (statement)


State 33

   24 statement: expression •

    $default  reduce using rule 24 (statement)


State 34

   38 expression: expr • SEMICOLON
   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    SEMICOLON      shift, and go to state 68
    LPAREN         shift, and go to state 69


State 35

   40 expr: binary •

    $default  reduce using rule 40 (expr)


State 36

   39 expr: unary •

    $default  reduce using rule 39 (expr)


State 37

   41 expr: braces •

    $default  reduce using rule 41 (expr)


State 38

   42 expr: callOrIndexer •

    $default  reduce using rule 42 (expr)


State 39

   43 expr: place •

    $default  reduce using rule 43 (expr)


State 40

   44 expr: literal •

    $default  reduce using rule 44 (expr)


State 41

   10 argDef: IDENTIFIER • optionalTypeRef

    AS  shift, and go to state 70

    $default  reduce using rule 11 (optionalTypeRef)

    optionalTypeRef  go to state 71


State 42

    6 funcSignature: IDENTIFIER LPAREN listArgDef • RPAREN optionalTypeRef

    RPAREN  shift, and go to state 72


State 43

    8 listArgDef: argDef •
    9           | argDef • COMMA listArgDef

    COMMA  shift, and go to state 73

    $default  reduce using rule 8 (listArgDef)


State 44

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   59 unary: PLUS expr •
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 59 (unary)]
    MINUS          [reduce using rule 59 (unary)]
    STAR           [reduce using rule 59 (unary)]
    SLASH          [reduce using rule 59 (unary)]
    PERCENT        [reduce using rule 59 (unary)]
    EQUAL          [reduce using rule 59 (unary)]
    NOTEQUAL       [reduce using rule 59 (unary)]
    LESSTHAN       [reduce using rule 59 (unary)]
    GREATERTHAN    [reduce using rule 59 (unary)]
    LESSTHANEQ     [reduce using rule 59 (unary)]
    GREATERTHANEQ  [reduce using rule 59 (unary)]
    AND            [reduce using rule 59 (unary)]
    OR             [reduce using rule 59 (unary)]
    LPAREN         [reduce using rule 59 (unary)]
    $default       reduce using rule 59 (unary)


State 45

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   60 unary: MINUS expr •
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 60 (unary)]
    MINUS          [reduce using rule 60 (unary)]
    STAR           [reduce using rule 60 (unary)]
    SLASH          [reduce using rule 60 (unary)]
    PERCENT        [reduce using rule 60 (unary)]
    EQUAL          [reduce using rule 60 (unary)]
    NOTEQUAL       [reduce using rule 60 (unary)]
    LESSTHAN       [reduce using rule 60 (unary)]
    GREATERTHAN    [reduce using rule 60 (unary)]
    LESSTHANEQ     [reduce using rule 60 (unary)]
    GREATERTHANEQ  [reduce using rule 60 (unary)]
    AND            [reduce using rule 60 (unary)]
    OR             [reduce using rule 60 (unary)]
    LPAREN         [reduce using rule 60 (unary)]
    $default       reduce using rule 60 (unary)


State 46

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   61 unary: NOT expr •
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 61 (unary)]
    MINUS          [reduce using rule 61 (unary)]
    STAR           [reduce using rule 61 (unary)]
    SLASH          [reduce using rule 61 (unary)]
    PERCENT        [reduce using rule 61 (unary)]
    EQUAL          [reduce using rule 61 (unary)]
    NOTEQUAL       [reduce using rule 61 (unary)]
    LESSTHAN       [reduce using rule 61 (unary)]
    GREATERTHAN    [reduce using rule 61 (unary)]
    LESSTHANEQ     [reduce using rule 61 (unary)]
    GREATERTHANEQ  [reduce using rule 61 (unary)]
    AND            [reduce using rule 61 (unary)]
    OR             [reduce using rule 61 (unary)]
    LPAREN         [reduce using rule 61 (unary)]
    $default       reduce using rule 61 (unary)


State 47

   31 if: IF expr • THEN listStatement optionalElseStatement END IF
   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    THEN           shift, and go to state 74
    LPAREN         shift, and go to state 69


State 48

   34 while: WHILE expr • listStatement WEND
   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    NOT            shift, and go to state 10
    IDENTIFIER     shift, and go to state 11
    STR            shift, and go to state 12
    CHAR           shift, and go to state 13
    BIN            shift, and go to state 14
    HEX            shift, and go to state 15
    DEC            shift, and go to state 16
    TRUE           shift, and go to state 17
    FALSE          shift, and go to state 18
    IF             shift, and go to state 19
    WHILE          shift, and go to state 20
    DO             shift, and go to state 21
    BREAK          shift, and go to state 22
    LPAREN         shift, and go to state 77
    DIM            shift, and go to state 24

    $default  reduce using rule 25 (listStatement)

    statement      go to state 26
    listStatement  go to state 78
    var            go to state 28
    if             go to state 29
    while          go to state 30
    do             go to state 31
    break          go to state 32
    expression     go to state 33
    expr           go to state 34
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 49

   35 do: DO listStatement • LOOP WHILE expr
   36   | DO listStatement • LOOP UNTIL expr

    LOOP  shift, and go to state 79


State 50

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   62 braces: LPAREN expr • RPAREN
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69
    RPAREN         shift, and go to state 80


State 51

   29 listIdentifier: IDENTIFIER •
   30               | IDENTIFIER • COMMA listIdentifier

    COMMA  shift, and go to state 81

    $default  reduce using rule 29 (listIdentifier)


State 52

   27 var: DIM listIdentifier • AS typeRef

    AS  shift, and go to state 82


State 53

   26 listStatement: statement listStatement •

    $default  reduce using rule 26 (listStatement)


State 54

    5 optionalFuncBody: listStatement END • FUNCTION

    FUNCTION  shift, and go to state 83


State 55

   46 binary: expr PLUS • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 84
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 56

   47 binary: expr MINUS • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 85
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 57

   48 binary: expr STAR • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 86
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 58

   49 binary: expr SLASH • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 87
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 59

   50 binary: expr PERCENT • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 88
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 60

   45 binary: expr EQUAL • expr
   51       | expr EQUAL • EQUAL expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    EQUAL       shift, and go to state 89
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 90
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 61

   52 binary: expr NOTEQUAL • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 91
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 62

   53 binary: expr LESSTHAN • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 92
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 63

   54 binary: expr GREATERTHAN • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 93
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 64

   55 binary: expr LESSTHANEQ • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 94
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 65

   56 binary: expr GREATERTHANEQ • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 95
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 66

   57 binary: expr AND • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 96
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 67

   58 binary: expr OR • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 97
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 68

   38 expression: expr SEMICOLON •

    $default  reduce using rule 38 (expression)


State 69

   63 callOrIndexer: expr LPAREN • listExpr RPAREN

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    $default  reduce using rule 66 (listExpr)

    expr           go to state 98
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    listExpr       go to state 99
    place          go to state 39
    literal        go to state 40


State 70

   12 optionalTypeRef: AS • typeRef

    IDENTIFIER  shift, and go to state 100
    TYPEDEF     shift, and go to state 101

    typeRef  go to state 102
    builtin  go to state 103
    custom   go to state 104
    array    go to state 105


State 71

   10 argDef: IDENTIFIER optionalTypeRef •

    $default  reduce using rule 10 (argDef)


State 72

    6 funcSignature: IDENTIFIER LPAREN listArgDef RPAREN • optionalTypeRef

    AS  shift, and go to state 70

    $default  reduce using rule 11 (optionalTypeRef)

    optionalTypeRef  go to state 106


State 73

    9 listArgDef: argDef COMMA • listArgDef

    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 7 (listArgDef)

    listArgDef  go to state 107
    argDef      go to state 43


State 74

   31 if: IF expr THEN • listStatement optionalElseStatement END IF

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    DO          shift, and go to state 21
    BREAK       shift, and go to state 22
    LPAREN      shift, and go to state 23
    DIM         shift, and go to state 24

    $default  reduce using rule 25 (listStatement)

    statement      go to state 26
    listStatement  go to state 108
    var            go to state 28
    if             go to state 29
    while          go to state 30
    do             go to state 31
    break          go to state 32
    expression     go to state 33
    expr           go to state 34
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 75

   46 binary: expr PLUS • expr
   59 unary: PLUS • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 109
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 76

   47 binary: expr MINUS • expr
   60 unary: MINUS • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 110
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 77

   62 braces: LPAREN • expr RPAREN
   63 callOrIndexer: expr LPAREN • listExpr RPAREN

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    $default  reduce using rule 66 (listExpr)

    expr           go to state 111
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    listExpr       go to state 99
    place          go to state 39
    literal        go to state 40


State 78

   34 while: WHILE expr listStatement • WEND

    WEND  shift, and go to state 112


State 79

   35 do: DO listStatement LOOP • WHILE expr
   36   | DO listStatement LOOP • UNTIL expr

    WHILE  shift, and go to state 113
    UNTIL  shift, and go to state 114


State 80

   62 braces: LPAREN expr RPAREN •

    $default  reduce using rule 62 (braces)


State 81

   30 listIdentifier: IDENTIFIER COMMA • listIdentifier

    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 28 (listIdentifier)

    listIdentifier  go to state 115


State 82

   27 var: DIM listIdentifier AS • typeRef

    IDENTIFIER  shift, and go to state 100
    TYPEDEF     shift, and go to state 101

    typeRef  go to state 116
    builtin  go to state 103
    custom   go to state 104
    array    go to state 105


State 83

    5 optionalFuncBody: listStatement END FUNCTION •

    $default  reduce using rule 5 (optionalFuncBody)


State 84

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   46       | expr PLUS expr •
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 46 (binary)]
    MINUS          [reduce using rule 46 (binary)]
    STAR           [reduce using rule 46 (binary)]
    SLASH          [reduce using rule 46 (binary)]
    PERCENT        [reduce using rule 46 (binary)]
    EQUAL          [reduce using rule 46 (binary)]
    NOTEQUAL       [reduce using rule 46 (binary)]
    LESSTHAN       [reduce using rule 46 (binary)]
    GREATERTHAN    [reduce using rule 46 (binary)]
    LESSTHANEQ     [reduce using rule 46 (binary)]
    GREATERTHANEQ  [reduce using rule 46 (binary)]
    AND            [reduce using rule 46 (binary)]
    OR             [reduce using rule 46 (binary)]
    LPAREN         [reduce using rule 46 (binary)]
    $default       reduce using rule 46 (binary)


State 85

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   47       | expr MINUS expr •
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 47 (binary)]
    MINUS          [reduce using rule 47 (binary)]
    STAR           [reduce using rule 47 (binary)]
    SLASH          [reduce using rule 47 (binary)]
    PERCENT        [reduce using rule 47 (binary)]
    EQUAL          [reduce using rule 47 (binary)]
    NOTEQUAL       [reduce using rule 47 (binary)]
    LESSTHAN       [reduce using rule 47 (binary)]
    GREATERTHAN    [reduce using rule 47 (binary)]
    LESSTHANEQ     [reduce using rule 47 (binary)]
    GREATERTHANEQ  [reduce using rule 47 (binary)]
    AND            [reduce using rule 47 (binary)]
    OR             [reduce using rule 47 (binary)]
    LPAREN         [reduce using rule 47 (binary)]
    $default       reduce using rule 47 (binary)


State 86

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   48       | expr STAR expr •
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 48 (binary)]
    MINUS          [reduce using rule 48 (binary)]
    STAR           [reduce using rule 48 (binary)]
    SLASH          [reduce using rule 48 (binary)]
    PERCENT        [reduce using rule 48 (binary)]
    EQUAL          [reduce using rule 48 (binary)]
    NOTEQUAL       [reduce using rule 48 (binary)]
    LESSTHAN       [reduce using rule 48 (binary)]
    GREATERTHAN    [reduce using rule 48 (binary)]
    LESSTHANEQ     [reduce using rule 48 (binary)]
    GREATERTHANEQ  [reduce using rule 48 (binary)]
    AND            [reduce using rule 48 (binary)]
    OR             [reduce using rule 48 (binary)]
    LPAREN         [reduce using rule 48 (binary)]
    $default       reduce using rule 48 (binary)


State 87

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   49       | expr SLASH expr •
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 49 (binary)]
    MINUS          [reduce using rule 49 (binary)]
    STAR           [reduce using rule 49 (binary)]
    SLASH          [reduce using rule 49 (binary)]
    PERCENT        [reduce using rule 49 (binary)]
    EQUAL          [reduce using rule 49 (binary)]
    NOTEQUAL       [reduce using rule 49 (binary)]
    LESSTHAN       [reduce using rule 49 (binary)]
    GREATERTHAN    [reduce using rule 49 (binary)]
    LESSTHANEQ     [reduce using rule 49 (binary)]
    GREATERTHANEQ  [reduce using rule 49 (binary)]
    AND            [reduce using rule 49 (binary)]
    OR             [reduce using rule 49 (binary)]
    LPAREN         [reduce using rule 49 (binary)]
    $default       reduce using rule 49 (binary)


State 88

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   50       | expr PERCENT expr •
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 50 (binary)]
    MINUS          [reduce using rule 50 (binary)]
    STAR           [reduce using rule 50 (binary)]
    SLASH          [reduce using rule 50 (binary)]
    PERCENT        [reduce using rule 50 (binary)]
    EQUAL          [reduce using rule 50 (binary)]
    NOTEQUAL       [reduce using rule 50 (binary)]
    LESSTHAN       [reduce using rule 50 (binary)]
    GREATERTHAN    [reduce using rule 50 (binary)]
    LESSTHANEQ     [reduce using rule 50 (binary)]
    GREATERTHANEQ  [reduce using rule 50 (binary)]
    AND            [reduce using rule 50 (binary)]
    OR             [reduce using rule 50 (binary)]
    LPAREN         [reduce using rule 50 (binary)]
    $default       reduce using rule 50 (binary)


State 89

   51 binary: expr EQUAL EQUAL • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 117
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 90

   45 binary: expr • EQUAL expr
   45       | expr EQUAL expr •
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 45 (binary)]
    MINUS          [reduce using rule 45 (binary)]
    STAR           [reduce using rule 45 (binary)]
    SLASH          [reduce using rule 45 (binary)]
    PERCENT        [reduce using rule 45 (binary)]
    EQUAL          [reduce using rule 45 (binary)]
    NOTEQUAL       [reduce using rule 45 (binary)]
    LESSTHAN       [reduce using rule 45 (binary)]
    GREATERTHAN    [reduce using rule 45 (binary)]
    LESSTHANEQ     [reduce using rule 45 (binary)]
    GREATERTHANEQ  [reduce using rule 45 (binary)]
    AND            [reduce using rule 45 (binary)]
    OR             [reduce using rule 45 (binary)]
    LPAREN         [reduce using rule 45 (binary)]
    $default       reduce using rule 45 (binary)


State 91

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   52       | expr NOTEQUAL expr •
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 52 (binary)]
    MINUS          [reduce using rule 52 (binary)]
    STAR           [reduce using rule 52 (binary)]
    SLASH          [reduce using rule 52 (binary)]
    PERCENT        [reduce using rule 52 (binary)]
    EQUAL          [reduce using rule 52 (binary)]
    NOTEQUAL       [reduce using rule 52 (binary)]
    LESSTHAN       [reduce using rule 52 (binary)]
    GREATERTHAN    [reduce using rule 52 (binary)]
    LESSTHANEQ     [reduce using rule 52 (binary)]
    GREATERTHANEQ  [reduce using rule 52 (binary)]
    AND            [reduce using rule 52 (binary)]
    OR             [reduce using rule 52 (binary)]
    LPAREN         [reduce using rule 52 (binary)]
    $default       reduce using rule 52 (binary)


State 92

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   53       | expr LESSTHAN expr •
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 53 (binary)]
    MINUS          [reduce using rule 53 (binary)]
    STAR           [reduce using rule 53 (binary)]
    SLASH          [reduce using rule 53 (binary)]
    PERCENT        [reduce using rule 53 (binary)]
    EQUAL          [reduce using rule 53 (binary)]
    NOTEQUAL       [reduce using rule 53 (binary)]
    LESSTHAN       [reduce using rule 53 (binary)]
    GREATERTHAN    [reduce using rule 53 (binary)]
    LESSTHANEQ     [reduce using rule 53 (binary)]
    GREATERTHANEQ  [reduce using rule 53 (binary)]
    AND            [reduce using rule 53 (binary)]
    OR             [reduce using rule 53 (binary)]
    LPAREN         [reduce using rule 53 (binary)]
    $default       reduce using rule 53 (binary)


State 93

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   54       | expr GREATERTHAN expr •
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 54 (binary)]
    MINUS          [reduce using rule 54 (binary)]
    STAR           [reduce using rule 54 (binary)]
    SLASH          [reduce using rule 54 (binary)]
    PERCENT        [reduce using rule 54 (binary)]
    EQUAL          [reduce using rule 54 (binary)]
    NOTEQUAL       [reduce using rule 54 (binary)]
    LESSTHAN       [reduce using rule 54 (binary)]
    GREATERTHAN    [reduce using rule 54 (binary)]
    LESSTHANEQ     [reduce using rule 54 (binary)]
    GREATERTHANEQ  [reduce using rule 54 (binary)]
    AND            [reduce using rule 54 (binary)]
    OR             [reduce using rule 54 (binary)]
    LPAREN         [reduce using rule 54 (binary)]
    $default       reduce using rule 54 (binary)


State 94

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   55       | expr LESSTHANEQ expr •
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 55 (binary)]
    MINUS          [reduce using rule 55 (binary)]
    STAR           [reduce using rule 55 (binary)]
    SLASH          [reduce using rule 55 (binary)]
    PERCENT        [reduce using rule 55 (binary)]
    EQUAL          [reduce using rule 55 (binary)]
    NOTEQUAL       [reduce using rule 55 (binary)]
    LESSTHAN       [reduce using rule 55 (binary)]
    GREATERTHAN    [reduce using rule 55 (binary)]
    LESSTHANEQ     [reduce using rule 55 (binary)]
    GREATERTHANEQ  [reduce using rule 55 (binary)]
    AND            [reduce using rule 55 (binary)]
    OR             [reduce using rule 55 (binary)]
    LPAREN         [reduce using rule 55 (binary)]
    $default       reduce using rule 55 (binary)


State 95

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   56       | expr GREATERTHANEQ expr •
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 56 (binary)]
    MINUS          [reduce using rule 56 (binary)]
    STAR           [reduce using rule 56 (binary)]
    SLASH          [reduce using rule 56 (binary)]
    PERCENT        [reduce using rule 56 (binary)]
    EQUAL          [reduce using rule 56 (binary)]
    NOTEQUAL       [reduce using rule 56 (binary)]
    LESSTHAN       [reduce using rule 56 (binary)]
    GREATERTHAN    [reduce using rule 56 (binary)]
    LESSTHANEQ     [reduce using rule 56 (binary)]
    GREATERTHANEQ  [reduce using rule 56 (binary)]
    AND            [reduce using rule 56 (binary)]
    OR             [reduce using rule 56 (binary)]
    LPAREN         [reduce using rule 56 (binary)]
    $default       reduce using rule 56 (binary)


State 96

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   57       | expr AND expr •
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 57 (binary)]
    MINUS          [reduce using rule 57 (binary)]
    STAR           [reduce using rule 57 (binary)]
    SLASH          [reduce using rule 57 (binary)]
    PERCENT        [reduce using rule 57 (binary)]
    EQUAL          [reduce using rule 57 (binary)]
    NOTEQUAL       [reduce using rule 57 (binary)]
    LESSTHAN       [reduce using rule 57 (binary)]
    GREATERTHAN    [reduce using rule 57 (binary)]
    LESSTHANEQ     [reduce using rule 57 (binary)]
    GREATERTHANEQ  [reduce using rule 57 (binary)]
    AND            [reduce using rule 57 (binary)]
    OR             [reduce using rule 57 (binary)]
    LPAREN         [reduce using rule 57 (binary)]
    $default       reduce using rule 57 (binary)


State 97

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   58       | expr OR expr •
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 58 (binary)]
    MINUS          [reduce using rule 58 (binary)]
    STAR           [reduce using rule 58 (binary)]
    SLASH          [reduce using rule 58 (binary)]
    PERCENT        [reduce using rule 58 (binary)]
    EQUAL          [reduce using rule 58 (binary)]
    NOTEQUAL       [reduce using rule 58 (binary)]
    LESSTHAN       [reduce using rule 58 (binary)]
    GREATERTHAN    [reduce using rule 58 (binary)]
    LESSTHANEQ     [reduce using rule 58 (binary)]
    GREATERTHANEQ  [reduce using rule 58 (binary)]
    AND            [reduce using rule 58 (binary)]
    OR             [reduce using rule 58 (binary)]
    LPAREN         [reduce using rule 58 (binary)]
    $default       reduce using rule 58 (binary)


State 98

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN
   64 listExpr: expr • COMMA listExpr
   65         | expr •

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    COMMA          shift, and go to state 118
    LPAREN         shift, and go to state 69

    $default  reduce using rule 65 (listExpr)


State 99

   63 callOrIndexer: expr LPAREN listExpr • RPAREN

    RPAREN  shift, and go to state 119


State 100

   17 custom: IDENTIFIER •

    $default  reduce using rule 17 (custom)


State 101

   16 builtin: TYPEDEF •

    $default  reduce using rule 16 (builtin)


State 102

   12 optionalTypeRef: AS typeRef •
   18 array: typeRef • ARRAY_COMMAS

    ARRAY_COMMAS  shift, and go to state 120

    $default  reduce using rule 12 (optionalTypeRef)


State 103

   13 typeRef: builtin •

    $default  reduce using rule 13 (typeRef)


State 104

   14 typeRef: custom •

    $default  reduce using rule 14 (typeRef)


State 105

   15 typeRef: array •

    $default  reduce using rule 15 (typeRef)


State 106

    6 funcSignature: IDENTIFIER LPAREN listArgDef RPAREN optionalTypeRef •

    $default  reduce using rule 6 (funcSignature)


State 107

    9 listArgDef: argDef COMMA listArgDef •

    $default  reduce using rule 9 (listArgDef)


State 108

   31 if: IF expr THEN listStatement • optionalElseStatement END IF

    ELSE  shift, and go to state 121

    $default  reduce using rule 32 (optionalElseStatement)

    optionalElseStatement  go to state 122


State 109

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   46       | expr PLUS expr •
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   59 unary: PLUS expr •
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 46 (binary)]
    PLUS           [reduce using rule 59 (unary)]
    MINUS          [reduce using rule 46 (binary)]
    MINUS          [reduce using rule 59 (unary)]
    STAR           [reduce using rule 46 (binary)]
    STAR           [reduce using rule 59 (unary)]
    SLASH          [reduce using rule 46 (binary)]
    SLASH          [reduce using rule 59 (unary)]
    PERCENT        [reduce using rule 46 (binary)]
    PERCENT        [reduce using rule 59 (unary)]
    EQUAL          [reduce using rule 46 (binary)]
    EQUAL          [reduce using rule 59 (unary)]
    NOTEQUAL       [reduce using rule 46 (binary)]
    NOTEQUAL       [reduce using rule 59 (unary)]
    LESSTHAN       [reduce using rule 46 (binary)]
    LESSTHAN       [reduce using rule 59 (unary)]
    GREATERTHAN    [reduce using rule 46 (binary)]
    GREATERTHAN    [reduce using rule 59 (unary)]
    LESSTHANEQ     [reduce using rule 46 (binary)]
    LESSTHANEQ     [reduce using rule 59 (unary)]
    GREATERTHANEQ  [reduce using rule 46 (binary)]
    GREATERTHANEQ  [reduce using rule 59 (unary)]
    AND            [reduce using rule 46 (binary)]
    AND            [reduce using rule 59 (unary)]
    OR             [reduce using rule 46 (binary)]
    OR             [reduce using rule 59 (unary)]
    SEMICOLON      reduce using rule 59 (unary)
    LPAREN         [reduce using rule 46 (binary)]
    LPAREN         [reduce using rule 59 (unary)]
    $default       reduce using rule 46 (binary)


State 110

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   47       | expr MINUS expr •
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   60 unary: MINUS expr •
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 47 (binary)]
    PLUS           [reduce using rule 60 (unary)]
    MINUS          [reduce using rule 47 (binary)]
    MINUS          [reduce using rule 60 (unary)]
    STAR           [reduce using rule 47 (binary)]
    STAR           [reduce using rule 60 (unary)]
    SLASH          [reduce using rule 47 (binary)]
    SLASH          [reduce using rule 60 (unary)]
    PERCENT        [reduce using rule 47 (binary)]
    PERCENT        [reduce using rule 60 (unary)]
    EQUAL          [reduce using rule 47 (binary)]
    EQUAL          [reduce using rule 60 (unary)]
    NOTEQUAL       [reduce using rule 47 (binary)]
    NOTEQUAL       [reduce using rule 60 (unary)]
    LESSTHAN       [reduce using rule 47 (binary)]
    LESSTHAN       [reduce using rule 60 (unary)]
    GREATERTHAN    [reduce using rule 47 (binary)]
    GREATERTHAN    [reduce using rule 60 (unary)]
    LESSTHANEQ     [reduce using rule 47 (binary)]
    LESSTHANEQ     [reduce using rule 60 (unary)]
    GREATERTHANEQ  [reduce using rule 47 (binary)]
    GREATERTHANEQ  [reduce using rule 60 (unary)]
    AND            [reduce using rule 47 (binary)]
    AND            [reduce using rule 60 (unary)]
    OR             [reduce using rule 47 (binary)]
    OR             [reduce using rule 60 (unary)]
    SEMICOLON      reduce using rule 60 (unary)
    LPAREN         [reduce using rule 47 (binary)]
    LPAREN         [reduce using rule 60 (unary)]
    $default       reduce using rule 47 (binary)


State 111

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   62 braces: LPAREN expr • RPAREN
   63 callOrIndexer: expr • LPAREN listExpr RPAREN
   64 listExpr: expr • COMMA listExpr
   65         | expr •

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    COMMA          shift, and go to state 118
    LPAREN         shift, and go to state 69
    RPAREN         shift, and go to state 80

    RPAREN  [reduce using rule 65 (listExpr)]


State 112

   34 while: WHILE expr listStatement WEND •

    $default  reduce using rule 34 (while)


State 113

   35 do: DO listStatement LOOP WHILE • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 123
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 114

   36 do: DO listStatement LOOP UNTIL • expr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    expr           go to state 124
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 115

   30 listIdentifier: IDENTIFIER COMMA listIdentifier •

    $default  reduce using rule 30 (listIdentifier)


State 116

   18 array: typeRef • ARRAY_COMMAS
   27 var: DIM listIdentifier AS typeRef •

    ARRAY_COMMAS  shift, and go to state 120

    $default  reduce using rule 27 (var)


State 117

   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   51       | expr EQUAL EQUAL expr •
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS           [reduce using rule 51 (binary)]
    MINUS          [reduce using rule 51 (binary)]
    STAR           [reduce using rule 51 (binary)]
    SLASH          [reduce using rule 51 (binary)]
    PERCENT        [reduce using rule 51 (binary)]
    EQUAL          [reduce using rule 51 (binary)]
    NOTEQUAL       [reduce using rule 51 (binary)]
    LESSTHAN       [reduce using rule 51 (binary)]
    GREATERTHAN    [reduce using rule 51 (binary)]
    LESSTHANEQ     [reduce using rule 51 (binary)]
    GREATERTHANEQ  [reduce using rule 51 (binary)]
    AND            [reduce using rule 51 (binary)]
    OR             [reduce using rule 51 (binary)]
    LPAREN         [reduce using rule 51 (binary)]
    $default       reduce using rule 51 (binary)


State 118

   64 listExpr: expr COMMA • listExpr

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    LPAREN      shift, and go to state 23

    $default  reduce using rule 66 (listExpr)

    expr           go to state 98
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    listExpr       go to state 125
    place          go to state 39
    literal        go to state 40


State 119

   63 callOrIndexer: expr LPAREN listExpr RPAREN •

    $default  reduce using rule 63 (callOrIndexer)


State 120

   18 array: typeRef ARRAY_COMMAS •

    $default  reduce using rule 18 (array)


State 121

   33 optionalElseStatement: ELSE • listStatement

    PLUS        shift, and go to state 8
    MINUS       shift, and go to state 9
    NOT         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    STR         shift, and go to state 12
    CHAR        shift, and go to state 13
    BIN         shift, and go to state 14
    HEX         shift, and go to state 15
    DEC         shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    DO          shift, and go to state 21
    BREAK       shift, and go to state 22
    LPAREN      shift, and go to state 23
    DIM         shift, and go to state 24

    $default  reduce using rule 25 (listStatement)

    statement      go to state 26
    listStatement  go to state 126
    var            go to state 28
    if             go to state 29
    while          go to state 30
    do             go to state 31
    break          go to state 32
    expression     go to state 33
    expr           go to state 34
    binary         go to state 35
    unary          go to state 36
    braces         go to state 37
    callOrIndexer  go to state 38
    place          go to state 39
    literal        go to state 40


State 122

   31 if: IF expr THEN listStatement optionalElseStatement • END IF

    END  shift, and go to state 127


State 123

   35 do: DO listStatement LOOP WHILE expr •
   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS      [reduce using rule 35 (do)]
    MINUS     [reduce using rule 35 (do)]
    LPAREN    [reduce using rule 35 (do)]
    $default  reduce using rule 35 (do)


State 124

   36 do: DO listStatement LOOP UNTIL expr •
   45 binary: expr • EQUAL expr
   46       | expr • PLUS expr
   47       | expr • MINUS expr
   48       | expr • STAR expr
   49       | expr • SLASH expr
   50       | expr • PERCENT expr
   51       | expr • EQUAL EQUAL expr
   52       | expr • NOTEQUAL expr
   53       | expr • LESSTHAN expr
   54       | expr • GREATERTHAN expr
   55       | expr • LESSTHANEQ expr
   56       | expr • GREATERTHANEQ expr
   57       | expr • AND expr
   58       | expr • OR expr
   63 callOrIndexer: expr • LPAREN listExpr RPAREN

    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56
    STAR           shift, and go to state 57
    SLASH          shift, and go to state 58
    PERCENT        shift, and go to state 59
    EQUAL          shift, and go to state 60
    NOTEQUAL       shift, and go to state 61
    LESSTHAN       shift, and go to state 62
    GREATERTHAN    shift, and go to state 63
    LESSTHANEQ     shift, and go to state 64
    GREATERTHANEQ  shift, and go to state 65
    AND            shift, and go to state 66
    OR             shift, and go to state 67
    LPAREN         shift, and go to state 69

    PLUS      [reduce using rule 36 (do)]
    MINUS     [reduce using rule 36 (do)]
    LPAREN    [reduce using rule 36 (do)]
    $default  reduce using rule 36 (do)


State 125

   64 listExpr: expr COMMA listExpr •

    $default  reduce using rule 64 (listExpr)


State 126

   33 optionalElseStatement: ELSE listStatement •

    $default  reduce using rule 33 (optionalElseStatement)


State 127

   31 if: IF expr THEN listStatement optionalElseStatement END • IF

    IF  shift, and go to state 128


State 128

   31 if: IF expr THEN listStatement optionalElseStatement END IF •

    $default  reduce using rule 31 (if)
